name: Publish Standards

on:
  push:
    branches:
      - release
    paths:
      - 'standards/**/Forc.toml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.84.0
  FORC_VERSION: 0.68.7
  CORE_VERSION: 0.43.2
  # A list of all standard projects, used by the detection job.
  PROJECTS: '["src3", "src5", "src6", "src7", "src10", "src11", "src12", "src14", "src15", "src16", "src17", "src20"]'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_projects: ${{ steps.changes.outputs.changed_projects }}
      has_changes: ${{ steps.changes.outputs.has_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Required to access the previous commit

      - name: Detect changed projects
        id: changes
        run: |
          PROJECT_LIST=$(echo $PROJECTS | jq -r '.[]')
          CHANGED_PROJECTS=""
          for project in $PROJECT_LIST; do
            CURRENT_VERSION=$(grep -m1 '^version =' "standards/$project/Forc.toml" | cut -d '"' -f2)
            PREVIOUS_VERSION=$(git show HEAD^:"standards/$project/Forc.toml" 2>/dev/null | grep -m1 '^version =' | cut -d '"' -f2 || echo "0.0.0")
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "Version changed for $project: $PREVIOUS_VERSION -> $CURRENT_VERSION"
              CHANGED_PROJECTS="$CHANGED_PROJECTS $project"
            fi
          done
          CHANGED_PROJECTS=$(echo "$CHANGED_PROJECTS" | xargs)
          echo "changed_projects=$CHANGED_PROJECTS" >> $GITHUB_OUTPUT
          if [ -z "$CHANGED_PROJECTS" ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
  
  publish-standards:
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Init Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: publisher-build
          workspaces: .github/publisher -> target

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.6.0
        with:
          name: my-toolchain
          components: forc@${{ env.FORC_VERSION }}, fuel-core@${{ env.CORE_VERSION }}

      - name: Build Publisher
        run: cargo build --release --manifest-path .github/publisher/Cargo.toml

      - name: Publish Standards
        run: ./.github/publisher/target/release/publisher ${{ needs.detect-changes.outputs.changed_projects }}
        env:
          FORC_PUB_TOKEN: ${{ secrets.FORCPUB_TOKEN }}    